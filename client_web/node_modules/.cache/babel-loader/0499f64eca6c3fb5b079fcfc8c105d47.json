{"ast":null,"code":"import _objectSpread from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/web/src/components/AppletButton.js\";\nimport React, { Component } from 'react';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport ToggleButton from './ToggleButton';\nimport Flexbox from './Flexbox';\nimport buttonStyles from '../styles/buttonStyles';\nimport DownArrowIcon from \"../res/drawable/down_arrow_icon.svg\";\nimport UpArrowIcon from \"../res/drawable/up_arrow_icon.svg\";\nimport Colors from '../res/values/Colors';\nimport Fonts from '../res/values/Fonts';\nimport Alts from '../res/values/Alts';\nimport Texts from '../res/values/Texts';\nvar styles = {\n  ContentContainer: {\n    backgroundColor: Colors.facebook,\n    // TODO :\n    borderRadius: 100\n  },\n  AppletButton: {\n    extend: 'Button',\n    width: 630,\n    cursor: 'default'\n  },\n  ButtonIcon: {\n    alignSelf: 'center',\n    width: 90,\n    margin: '20px 40px'\n  },\n  ButtonText: {\n    alignSelf: 'center',\n    color: Colors.white,\n    font: 'normal 28px/normal ' + Fonts.roboto\n  },\n  DropdownButton: {\n    alignSelf: 'center',\n    cursor: 'pointer',\n    width: 90,\n    margin: 20\n  },\n  Description: {\n    alignSelf: 'center',\n    margin: '30px 0',\n    width: 380,\n    color: Colors.white,\n    opacity: 0.6,\n    font: 'normal 18px/normal ' + Fonts.roboto,\n    whiteSpace: 'pre-wrap'\n  }\n};\n\nvar AppletButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppletButton, _Component);\n\n  function AppletButton(props) {\n    var _this;\n\n    _classCallCheck(this, AppletButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppletButton).call(this, props));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(AppletButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          description = _this$props.description,\n          src = _this$props.src;\n      var dropdownIcon = this.state.isOpen ? UpArrowIcon : DownArrowIcon;\n      return React.createElement(Flexbox, {\n        className: classes.ContentContainer,\n        column: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Flexbox, {\n        className: classes.AppletButton,\n        onClick: null,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.ButtonIcon,\n        src: src,\n        alt: Alts.appletIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.ButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, title), React.createElement(\"img\", {\n        className: classes.DropdownButton,\n        src: dropdownIcon,\n        alt: Alts.dropdownIcon,\n        onClick: function onClick() {\n          _this2.setState({\n            isOpen: !_this2.state.isOpen\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), this.state.isOpen && React.createElement(\"div\", {\n        className: classes.Description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, description), this.state.isOpen && React.createElement(ToggleButton, {\n        isActive: false // TODO : fetch\n        ,\n        text: Texts.turnOn // TODO :\n        ,\n        textColor: Colors.facebook // TODO :\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppletButton;\n}(Component);\n\nAppletButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  bgColor: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired\n};\nvar StyledAppletButton = injectSheet(_objectSpread({}, styles, buttonStyles))(AppletButton);\nexport default StyledAppletButton;","map":{"version":3,"sources":["/web/src/components/AppletButton.js"],"names":["React","Component","injectSheet","PropTypes","ToggleButton","Flexbox","buttonStyles","Colors","Fonts","Alts","Texts","styles","ContentContainer","backgroundColor","facebook","borderRadius","AppletButton","extend","width","cursor","ButtonIcon","alignSelf","margin","ButtonText","color","white","font","roboto","DropdownButton","Description","opacity","whiteSpace","props","state","isOpen","classes","title","description","src","dropdownIcon","UpArrowIcon","DownArrowIcon","appletIcon","setState","turnOn","propTypes","string","isRequired","bgColor","StyledAppletButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport ToggleButton from './ToggleButton'\nimport Flexbox from './Flexbox'\n\nimport buttonStyles from '../styles/buttonStyles'\nimport DownArrowIcon from '../res/drawable/down_arrow_icon.svg'\nimport UpArrowIcon from '../res/drawable/up_arrow_icon.svg'\nimport Colors from '../res/values/Colors'\nimport Fonts from '../res/values/Fonts'\nimport Alts from '../res/values/Alts'\nimport Texts from '../res/values/Texts'\n\nconst styles = {\n  ContentContainer: {\n    backgroundColor: Colors.facebook, // TODO :\n    borderRadius: 100\n  },\n  AppletButton: {\n    extend: 'Button',\n    width: 630,\n    cursor: 'default'\n  },\n  ButtonIcon: {\n    alignSelf: 'center',\n    width: 90,\n    margin: '20px 40px'\n  },\n  ButtonText: {\n    alignSelf: 'center',\n    color: Colors.white,\n    font: 'normal 28px/normal ' + Fonts.roboto\n  },\n  DropdownButton: {\n    alignSelf: 'center',\n\n    cursor: 'pointer',\n    width: 90,\n    margin: 20\n  },\n  Description: {\n    alignSelf: 'center',\n\n    margin: '30px 0',\n    width: 380,\n    color: Colors.white,\n    opacity: 0.6,\n    font: 'normal 18px/normal ' + Fonts.roboto,\n    whiteSpace: 'pre-wrap'\n  }\n}\n\nclass AppletButton extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  render () {\n    const { classes, title, description, src } = this.props\n    let dropdownIcon = this.state.isOpen ? UpArrowIcon : DownArrowIcon\n\n    return (\n      <Flexbox\n        className={classes.ContentContainer}\n        column>\n        <Flexbox\n          className={classes.AppletButton}\n          onClick={null}\n          center>\n          <img\n            className={classes.ButtonIcon}\n            src={src}\n            alt={Alts.appletIcon} />\n          <div className={classes.ButtonText}>\n            {title}\n          </div>\n          <img\n            className={classes.DropdownButton}\n            src={dropdownIcon}\n            alt={Alts.dropdownIcon}\n            onClick={() => { this.setState({ isOpen: !this.state.isOpen }) }} />\n        </Flexbox>\n        {this.state.isOpen &&\n        <div className={classes.Description}>\n          {description}\n        </div>}\n        {this.state.isOpen &&\n        <ToggleButton\n          isActive={false} // TODO : fetch\n          text={Texts.turnOn} // TODO :\n          textColor={Colors.facebook} // TODO :\n        />}\n      </Flexbox>\n    )\n  }\n}\n\nAppletButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  bgColor: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired\n}\n\nconst StyledAppletButton = injectSheet({ ...styles, ...buttonStyles })(AppletButton)\n\nexport default StyledAppletButton\n"]},"metadata":{},"sourceType":"module"}