{"ast":null,"code":"import _classCallCheck from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/web/src/components/AuthForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport EmailForm from './EmailForm';\nimport ProvidersChoice from './ProvidersChoice';\nimport EmailIcon from \"../res/drawable/email_icon.svg\";\nimport Flexbox from './Flexbox';\nimport Fonts from '../res/values/Fonts';\nimport Alts from '../res/values/Alts';\nimport Texts from '../res/values/Texts';\nimport Colors from '../res/values/Colors';\nimport Providers from '../res/values/Providers';\nvar styles = {\n  Title: {\n    cursor: 'default',\n    alignSelf: 'center',\n    font: 'normal 48px/normal ' + Fonts.roboto,\n    marginBottom: 25\n  },\n  ContentContainer: {\n    alignSelf: 'center',\n    zIndex: 1,\n    border: Colors.doveGray + ' 1px solid',\n    padding: '25px 0',\n    boxShadow: Colors.mako + ' 0 3px 15px',\n    backgroundColor: 'rgba(255, 255, 255, 0.79)'\n  }\n};\n\nvar AuthForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuthForm, _Component);\n\n  function AuthForm(props) {\n    var _this;\n\n    _classCallCheck(this, AuthForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthForm).call(this, props));\n    _this.state = {\n      showEmailForm: false\n    };\n    _this.toggleEmailForm = _this.toggleEmailForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AuthForm, [{\n    key: \"toggleEmailForm\",\n    value: function toggleEmailForm() {\n      this.setState({\n        showEmailForm: !this.state.showEmailForm\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          isLogin = _this$props.isLogin;\n      var prefix = isLogin ? Texts.login : Texts.signUp;\n      return React.createElement(Flexbox, {\n        column: true,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Flexbox, {\n        className: classes.Title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.showEmailForm && React.createElement(\"img\", {\n        src: EmailIcon,\n        alt: Alts.providerIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), prefix, this.state.showEmailForm && ' ' + Texts.with + ' ' + Providers.email), React.createElement(Flexbox, {\n        className: classes.ContentContainer,\n        column: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.showEmailForm ? React.createElement(EmailForm, {\n        isLogin: isLogin,\n        cancelOnClick: this.toggleEmailForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }) : React.createElement(ProvidersChoice, {\n        isLogin: isLogin,\n        prefix: prefix,\n        emailOnClick: this.toggleEmailForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AuthForm;\n}(Component);\n\nAuthForm.propTypes = {\n  isLogin: PropTypes.bool.isRequired\n};\nvar StyledAuthForm = injectSheet(styles)(AuthForm);\nexport default StyledAuthForm;","map":{"version":3,"sources":["/web/src/components/AuthForm.js"],"names":["React","Component","PropTypes","injectSheet","EmailForm","ProvidersChoice","Flexbox","Fonts","Alts","Texts","Colors","Providers","styles","Title","cursor","alignSelf","font","roboto","marginBottom","ContentContainer","zIndex","border","doveGray","padding","boxShadow","mako","backgroundColor","AuthForm","props","state","showEmailForm","toggleEmailForm","bind","setState","classes","isLogin","prefix","login","signUp","EmailIcon","providerIcon","with","email","propTypes","bool","isRequired","StyledAuthForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\n\nimport EmailForm from './EmailForm'\nimport ProvidersChoice from './ProvidersChoice'\n\nimport EmailIcon from '../res/drawable/email_icon.svg'\nimport Flexbox from './Flexbox'\nimport Fonts from '../res/values/Fonts'\nimport Alts from '../res/values/Alts'\nimport Texts from '../res/values/Texts'\nimport Colors from '../res/values/Colors'\nimport Providers from '../res/values/Providers'\n\nconst styles = {\n  Title: {\n    cursor: 'default',\n    alignSelf: 'center',\n    font: 'normal 48px/normal ' + Fonts.roboto,\n    marginBottom: 25\n  },\n  ContentContainer: {\n    alignSelf: 'center',\n    zIndex: 1,\n    border: Colors.doveGray + ' 1px solid',\n    padding: '25px 0',\n    boxShadow: Colors.mako + ' 0 3px 15px',\n    backgroundColor: 'rgba(255, 255, 255, 0.79)'\n  }\n}\n\nclass AuthForm extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      showEmailForm: false\n    }\n    this.toggleEmailForm = this.toggleEmailForm.bind(this)\n  }\n\n  toggleEmailForm () {\n    this.setState({\n      showEmailForm: !this.state.showEmailForm\n    })\n  }\n\n  render () {\n    const { classes, isLogin } = this.props\n    let prefix = isLogin ? Texts.login : Texts.signUp\n\n    return (\n      <Flexbox\n        column\n        center>\n        <Flexbox className={classes.Title}>\n          {this.state.showEmailForm &&\n          <img\n            src={EmailIcon}\n            alt={Alts.providerIcon} />}\n          {prefix}{this.state.showEmailForm && (' ' + Texts.with + ' ' + Providers.email)}\n        </Flexbox>\n        <Flexbox\n          className={classes.ContentContainer}\n          column>\n          {this.state.showEmailForm\n            ? <EmailForm\n              isLogin={isLogin}\n              cancelOnClick={this.toggleEmailForm} />\n            : <ProvidersChoice\n              isLogin={isLogin}\n              prefix={prefix}\n              emailOnClick={this.toggleEmailForm} />}\n        </Flexbox>\n      </Flexbox>\n    )\n  }\n}\n\nAuthForm.propTypes = {\n  isLogin: PropTypes.bool.isRequired\n}\n\nconst StyledAuthForm = injectSheet(styles)(AuthForm)\n\nexport default StyledAuthForm\n"]},"metadata":{},"sourceType":"module"}