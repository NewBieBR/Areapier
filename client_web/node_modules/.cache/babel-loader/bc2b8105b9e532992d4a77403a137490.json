{"ast":null,"code":"import _objectSpread from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/web/src/components/ToggleButton.js\";\nimport React from 'react';\nimport injectSheet from 'react-jss';\nimport PropTypes from 'prop-types';\nimport Flexbox from './Flexbox';\nimport buttonStyles from '../styles/buttonStyles';\nimport Colors from '../res/values/Colors';\nimport Fonts from '../res/values/Fonts';\nvar styles = {\n  ToggleButton: {\n    extend: 'Button',\n    alignSelf: 'center',\n    // TODO : use props.className instead\n    border: '4px solid',\n    borderColor: function borderColor(props) {\n      return props.isActive ? Colors.green : Colors.red;\n    },\n    cursor: 'default',\n    margin: '30px 0',\n    width: 336,\n    backgroundColor: Colors.white\n  },\n  RoundSwitcher: {\n    margin: '0 15px',\n    cursor: 'pointer',\n    width: 70,\n    height: 70,\n    borderRadius: 100,\n    backgroundColor: Colors.facebook // TODO :\n\n  },\n  ButtonText: {\n    margin: '0 70px',\n    alignSelf: 'center',\n    font: 'normal 24px/normal ' + Fonts.roboto,\n    color: function color(props) {\n      return props.textColor || '';\n    }\n  }\n};\n\nvar ToggleButton = function ToggleButton(props) {\n  var classes = props.classes,\n      isActive = props.isActive,\n      text = props.text;\n  return React.createElement(Flexbox, {\n    className: classes.ToggleButton,\n    spaceBetween: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, !isActive && React.createElement(\"div\", {\n    className: classes.RoundSwitcher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.ButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, text), isActive && React.createElement(\"div\", {\n    className: classes.RoundSwitcher,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nToggleButton.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  textColor: PropTypes.string\n};\nvar StyledToggleButton = injectSheet(_objectSpread({}, styles, buttonStyles))(ToggleButton);\nexport default StyledToggleButton;","map":{"version":3,"sources":["/web/src/components/ToggleButton.js"],"names":["React","injectSheet","PropTypes","Flexbox","buttonStyles","Colors","Fonts","styles","ToggleButton","extend","alignSelf","border","borderColor","props","isActive","green","red","cursor","margin","width","backgroundColor","white","RoundSwitcher","height","borderRadius","facebook","ButtonText","font","roboto","color","textColor","classes","text","propTypes","bool","isRequired","string","StyledToggleButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,QADI;AAEZC,IAAAA,SAAS,EAAE,QAFC;AAES;AAErBC,IAAAA,MAAM,EAAE,WAJI;AAKZC,IAAAA,WAAW,EAAE,qBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,QAAN,GAAiBT,MAAM,CAACU,KAAxB,GAA+BV,MAAM,CAACW,GAA1C;AAAA,KALN;AAMZC,IAAAA,MAAM,EAAE,SANI;AAOZC,IAAAA,MAAM,EAAE,QAPI;AAQZC,IAAAA,KAAK,EAAE,GARK;AASZC,IAAAA,eAAe,EAAEf,MAAM,CAACgB;AATZ,GADD;AAYbC,EAAAA,aAAa,EAAE;AACbJ,IAAAA,MAAM,EAAE,QADK;AAEbD,IAAAA,MAAM,EAAE,SAFK;AAGbE,IAAAA,KAAK,EAAE,EAHM;AAIbI,IAAAA,MAAM,EAAE,EAJK;AAKbC,IAAAA,YAAY,EAAE,GALD;AAMbJ,IAAAA,eAAe,EAAEf,MAAM,CAACoB,QANX,CAMoB;;AANpB,GAZF;AAoBbC,EAAAA,UAAU,EAAE;AACVR,IAAAA,MAAM,EAAE,QADE;AAEVR,IAAAA,SAAS,EAAE,QAFD;AAGViB,IAAAA,IAAI,EAAE,wBAAwBrB,KAAK,CAACsB,MAH1B;AAIVC,IAAAA,KAAK,EAAE,eAAAhB,KAAK;AAAA,aAAIA,KAAK,CAACiB,SAAN,IAAmB,EAAvB;AAAA;AAJF;AApBC,CAAf;;AA4BA,IAAMtB,YAAY,GAAG,SAAfA,YAAe,CAACK,KAAD,EAAW;AAAA,MACtBkB,OADsB,GACMlB,KADN,CACtBkB,OADsB;AAAA,MACbjB,QADa,GACMD,KADN,CACbC,QADa;AAAA,MACHkB,IADG,GACMnB,KADN,CACHmB,IADG;AAG9B,SACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAED,OAAO,CAACvB,YADrB;AAEE,IAAA,YAAY,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,CAACM,QAAD,IAAa;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACT,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhB,EAIE;AAAK,IAAA,SAAS,EAAES,OAAO,CAACL,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,IADH,CAJF,EAOGlB,QAAQ,IAAI;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACT,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPf,CADF;AAWD,CAdD;;AAgBAd,YAAY,CAACyB,SAAb,GAAyB;AACvBnB,EAAAA,QAAQ,EAAEZ,SAAS,CAACgC,IAAV,CAAeC,UADF;AAEvBH,EAAAA,IAAI,EAAE9B,SAAS,CAACkC,MAAV,CAAiBD,UAFA;AAGvBL,EAAAA,SAAS,EAAE5B,SAAS,CAACkC;AAHE,CAAzB;AAMA,IAAMC,kBAAkB,GAAGpC,WAAW,mBAAKM,MAAL,EAAgBH,YAAhB,EAAX,CAA0CI,YAA1C,CAA3B;AAEA,eAAe6B,kBAAf","sourcesContent":["import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Flexbox from './Flexbox'\n\nimport buttonStyles from '../styles/buttonStyles'\nimport Colors from '../res/values/Colors'\nimport Fonts from '../res/values/Fonts'\n\nconst styles = {\n  ToggleButton: {\n    extend: 'Button',\n    alignSelf: 'center', // TODO : use props.className instead\n\n    border: '4px solid',\n    borderColor: props => props.isActive ? Colors.green: Colors.red,\n    cursor: 'default',\n    margin: '30px 0',\n    width: 336,\n    backgroundColor: Colors.white\n  },\n  RoundSwitcher: {\n    margin: '0 15px',\n    cursor: 'pointer',\n    width: 70,\n    height: 70,\n    borderRadius: 100,\n    backgroundColor: Colors.facebook // TODO :\n  },\n  ButtonText: {\n    margin: '0 70px',\n    alignSelf: 'center',\n    font: 'normal 24px/normal ' + Fonts.roboto,\n    color: props => props.textColor || ''\n  }\n}\n\nconst ToggleButton = (props) => {\n  const { classes, isActive, text } = props\n\n  return (\n    <Flexbox\n      className={classes.ToggleButton}\n      spaceBetween>\n      {!isActive && <div className={classes.RoundSwitcher} />}\n      <div className={classes.ButtonText}>\n        {text}\n      </div>\n      {isActive && <div className={classes.RoundSwitcher} />}\n    </Flexbox>\n  )\n}\n\nToggleButton.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n  textColor: PropTypes.string\n}\n\nconst StyledToggleButton = injectSheet({...styles, ...buttonStyles})(ToggleButton)\n\nexport default StyledToggleButton\n"]},"metadata":{},"sourceType":"module"}