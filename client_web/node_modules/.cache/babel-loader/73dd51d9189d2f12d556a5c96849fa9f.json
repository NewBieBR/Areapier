{"ast":null,"code":"import _objectSpread from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/web/src/components/EmailForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport injectSheet from 'react-jss';\nimport { withSnackbar } from 'notistack';\nimport { withRouter } from 'react-router-dom';\nimport { connectUser, createUser } from '../services/Users/Requests';\nimport { setNewCookie } from '../helpers/cookies';\nimport buttonStyles from '../styles/buttonStyles';\nimport Texts from '../res/values/Texts';\nimport Names from '../res/values/Names';\nimport Colors from '../res/values/Colors';\nimport Fonts from '../res/values/Fonts';\nimport InputTypes from '../res/values/InputTypes';\nimport Flexbox from './Flexbox';\nimport Paths from '../res/values/Paths';\nimport Keys from '../res/values/Keys';\nimport Cookies from '../res/values/Cookies';\nvar styles = {\n  Input: {\n    margin: '25px 36px',\n    paddingBottom: 5,\n    width: 380,\n    outline: 'none',\n    font: 'normal 24px/normal ' + Fonts.roboto,\n    border: 'none',\n    borderBottom: Colors.silverChalice + ' 1px solid',\n    '&:focus': {\n      borderBottom: Colors.green + ' 1px solid'\n    }\n  },\n  WrongInput: {\n    '&:focus': {\n      borderBottom: Colors.red + ' 1px solid'\n    }\n  },\n  EmailInput: {\n    marginBottom: 50\n  },\n  ActionButtonsContainer: {\n    margin: '36px'\n  }\n};\n\nvar EmailForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmailForm, _Component);\n\n  function EmailForm(props) {\n    var _this;\n\n    _classCallCheck(this, EmailForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmailForm).call(this, props));\n    _this.state = {\n      emailValue: '',\n      passwordValue: '',\n      retypePasswordValue: '',\n      passwordsMatch: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOnSubmit = _this.handleOnSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EmailForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name + 'Value', event.target.value));\n\n      if (event.target.name === Names.retypePassword) {\n        this.setState({\n          passwordsMatch: event.target.value === this.state.passwordValue\n        });\n      }\n    }\n  }, {\n    key: \"handleOnSubmit\",\n    value: function () {\n      var _handleOnSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var createUserResponse, connectUserResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.props.isLogin) {\n                  _context.next = 8;\n                  break;\n                }\n\n                if (!(this.state.passwordValue !== this.state.retypePasswordValue)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                this.props.enqueueSnackbar(Texts.passwordMismatch, {\n                  variant: 'error'\n                });\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return createUser(this.state.emailValue, this.state.passwordValue, Keys.emailAuthType);\n\n              case 6:\n                createUserResponse = _context.sent;\n                this.props.enqueueSnackbar(createUserResponse.message, {\n                  variant: createUserResponse.snackbarVariant\n                });\n\n              case 8:\n                if (!(this.props.isLogin || createUserResponse.isSuccessful)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 11;\n                return connectUser(this.state.emailValue, this.state.passwordValue, Keys.emailAuthType);\n\n              case 11:\n                connectUserResponse = _context.sent;\n                this.props.enqueueSnackbar(connectUserResponse.message, {\n                  variant: connectUserResponse.snackbarVariant\n                });\n\n                if (connectUserResponse.isSuccessful) {\n                  setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate);\n                  setNewCookie(Cookies.username, this.state.emailValue, connectUserResponse.data.expirationDate);\n                  this.props.history.push(Paths.dashboard);\n                }\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleOnSubmit() {\n        return _handleOnSubmit.apply(this, arguments);\n      }\n\n      return handleOnSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var submitTitle = this.props.isLogin ? Texts.login : Texts.signUp;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: classes.Input + ' ' + classes.EmailInput,\n        type: InputTypes.text,\n        name: Names.email,\n        placeholder: Texts.email,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: classes.Input,\n        type: InputTypes.password,\n        name: Names.password,\n        placeholder: Texts.password,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), !this.props.isLogin && React.createElement(\"input\", {\n        className: classes.Input + (this.state.passwordsMatch ? '' : ' ' + classes.WrongInput),\n        name: Names.retypePassword,\n        placeholder: Texts.retypePassword,\n        type: InputTypes.password,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Flexbox, {\n        spaceBetween: true,\n        className: classes.ActionButtonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: classes.Button + ' ' + classes.MediumEmphasisButton,\n        onClick: this.props.cancelOnClick,\n        type: InputTypes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, Texts.cancel), React.createElement(\"button\", {\n        className: classes.Button + ' ' + classes.HighEmphasisButton,\n        onClick: this.handleOnSubmit,\n        type: InputTypes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, submitTitle)));\n    }\n  }]);\n\n  return EmailForm;\n}(Component);\n\nEmailForm.propTypes = {\n  isLogin: PropTypes.bool.isRequired,\n  cancelOnClick: PropTypes.func.isRequired\n};\nvar WithRouterWithSnackbarStyledEmailForm = withRouter(withSnackbar(injectSheet(_objectSpread({}, styles, buttonStyles))(EmailForm)));\nexport default WithRouterWithSnackbarStyledEmailForm;","map":{"version":3,"sources":["/web/src/components/EmailForm.js"],"names":["React","Component","PropTypes","injectSheet","withSnackbar","withRouter","connectUser","createUser","setNewCookie","buttonStyles","Texts","Names","Colors","Fonts","InputTypes","Flexbox","Paths","Keys","Cookies","styles","Input","margin","paddingBottom","width","outline","font","roboto","border","borderBottom","silverChalice","green","WrongInput","red","EmailInput","marginBottom","ActionButtonsContainer","EmailForm","props","state","emailValue","passwordValue","retypePasswordValue","passwordsMatch","handleChange","bind","handleOnSubmit","event","setState","target","name","value","retypePassword","isLogin","enqueueSnackbar","passwordMismatch","variant","emailAuthType","createUserResponse","message","snackbarVariant","isSuccessful","connectUserResponse","userToken","data","token","expirationDate","username","history","push","dashboard","classes","submitTitle","login","signUp","text","email","password","Button","MediumEmphasisButton","cancelOnClick","button","cancel","HighEmphasisButton","propTypes","bool","isRequired","func","WithRouterWithSnackbarStyledEmailForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport injectSheet from 'react-jss'\nimport { withSnackbar } from 'notistack'\nimport { withRouter } from 'react-router-dom'\n\nimport { connectUser, createUser } from '../services/Users/Requests'\nimport { setNewCookie } from '../helpers/cookies'\n\nimport buttonStyles from '../styles/buttonStyles'\n\nimport Texts from '../res/values/Texts'\nimport Names from '../res/values/Names'\nimport Colors from '../res/values/Colors'\nimport Fonts from '../res/values/Fonts'\nimport InputTypes from '../res/values/InputTypes'\nimport Flexbox from './Flexbox'\nimport Paths from '../res/values/Paths'\nimport Keys from '../res/values/Keys'\nimport Cookies from '../res/values/Cookies'\n\nconst styles = {\n  Input: {\n    margin: '25px 36px',\n    paddingBottom: 5,\n    width: 380,\n    outline: 'none',\n    font: 'normal 24px/normal ' + Fonts.roboto,\n    border: 'none',\n    borderBottom: Colors.silverChalice + ' 1px solid',\n\n    '&:focus': { borderBottom: Colors.green + ' 1px solid' }\n  },\n  WrongInput: {\n    '&:focus': { borderBottom: Colors.red + ' 1px solid' }\n  },\n  EmailInput: { marginBottom: 50 },\n  ActionButtonsContainer: { margin: '36px' }\n}\n\nclass EmailForm extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      emailValue: '',\n      passwordValue: '',\n      retypePasswordValue: '',\n      passwordsMatch: true\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n  }\n\n  handleChange (event) {\n    this.setState({\n      [event.target.name + 'Value']: event.target.value\n    })\n\n    if (event.target.name === Names.retypePassword) {\n      this.setState({\n        passwordsMatch: event.target.value === this.state.passwordValue\n      })\n    }\n  }\n\n  async handleOnSubmit () {\n    let createUserResponse\n\n    if (!this.props.isLogin) { // Sign up\n      if (this.state.passwordValue !== this.state.retypePasswordValue) {\n        this.props.enqueueSnackbar(Texts.passwordMismatch, { variant: 'error' })\n        return\n      }\n      createUserResponse = await createUser(this.state.emailValue, this.state.passwordValue, Keys.emailAuthType)\n\n      this.props.enqueueSnackbar(createUserResponse.message, { variant: createUserResponse.snackbarVariant })\n    }\n    if (this.props.isLogin || createUserResponse.isSuccessful) {\n      let connectUserResponse = await connectUser(this.state.emailValue, this.state.passwordValue, Keys.emailAuthType)\n\n      this.props.enqueueSnackbar(connectUserResponse.message, { variant: connectUserResponse.snackbarVariant })\n      if (connectUserResponse.isSuccessful) {\n        setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate)\n        setNewCookie(Cookies.username, this.state.emailValue, connectUserResponse.data.expirationDate)\n        this.props.history.push(Paths.dashboard)\n      }\n    }\n  }\n\n  render () {\n    const { classes } = this.props\n    let submitTitle = this.props.isLogin ? Texts.login : Texts.signUp\n    return (\n      <React.Fragment>\n        <input\n          className={classes.Input + ' ' + classes.EmailInput}\n          type={InputTypes.text}\n          name={Names.email}\n          placeholder={Texts.email}\n          value={this.state.value}\n          onChange={this.handleChange} />\n        <input\n          className={classes.Input}\n          type={InputTypes.password}\n          name={Names.password}\n          placeholder={Texts.password}\n          value={this.state.value}\n          onChange={this.handleChange} />\n        {!this.props.isLogin &&\n        <input\n          className={classes.Input + (this.state.passwordsMatch ? '' : ' ' + classes.WrongInput)}\n          name={Names.retypePassword}\n          placeholder={Texts.retypePassword}\n          type={InputTypes.password}\n          value={this.state.value}\n          onChange={this.handleChange} />}\n        <Flexbox spaceBetween className={classes.ActionButtonsContainer}>\n          <button\n            className={classes.Button + ' ' + classes.MediumEmphasisButton}\n            onClick={this.props.cancelOnClick}\n            type={InputTypes.button}>\n            {Texts.cancel}\n          </button>\n          <button\n            className={classes.Button + ' ' + classes.HighEmphasisButton}\n            onClick={this.handleOnSubmit}\n            type={InputTypes.button}>\n            {submitTitle}\n          </button>\n        </Flexbox>\n      </React.Fragment>\n    )\n  }\n}\n\nEmailForm.propTypes = {\n  isLogin: PropTypes.bool.isRequired,\n  cancelOnClick: PropTypes.func.isRequired\n}\n\nconst WithRouterWithSnackbarStyledEmailForm = withRouter(withSnackbar(injectSheet({ ...styles, ...buttonStyles })(EmailForm)))\n\nexport default WithRouterWithSnackbarStyledEmailForm\n"]},"metadata":{},"sourceType":"module"}