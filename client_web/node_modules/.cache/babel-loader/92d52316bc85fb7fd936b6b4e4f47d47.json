{"ast":null,"code":"import _regeneratorRuntime from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/web/src/components/ProvidersChoice.js\";\nimport React, { Component } from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { GoogleLogin } from 'react-google-login';\nimport { withSnackbar } from 'notistack';\nimport { withRouter } from 'react-router-dom';\nimport AuthButton from './AuthButton';\nimport EmailIcon from \"../res/drawable/email_icon.svg\";\nimport FacebookIcon from \"../res/drawable/facebook_icon.svg\";\nimport GoogleIcon from \"../res/drawable/google_icon.svg\";\nimport TwitterIcon from \"../res/drawable/twitter_icon.svg\";\nimport PropTypes from 'prop-types';\nimport { connectUser, createUser } from '../services/Users/Requests';\nimport Keys from '../res/values/Keys';\nimport { setNewCookie } from '../helpers/cookies';\nimport Cookies from '../res/values/Cookies';\nimport Paths from '../res/values/Paths'; // TODO : Dynamic styles and providers\n\nvar ProvidersChoice =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProvidersChoice, _Component);\n\n  function ProvidersChoice(props) {\n    var _this;\n\n    _classCallCheck(this, ProvidersChoice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProvidersChoice).call(this, props));\n    _this.state = {\n      facebookResponse: undefined\n    };\n    _this.responseFacebook = _this.responseFacebook.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.responseGoogle = _this.responseGoogle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProvidersChoice, [{\n    key: \"handleFacebookOnClick\",\n    value: function () {\n      var _handleFacebookOnClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var createUserResponse, connectUserResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.props.isLogin) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return createUser(this.state.facebookResponse.name, null, Keys.facebookAuthType, this.state.facebookResponse.accessToken, this.state.facebookResponse.userID);\n\n              case 3:\n                createUserResponse = _context.sent;\n                this.props.enqueueSnackbar(createUserResponse.message, {\n                  variant: createUserResponse.snackbarVariant\n                });\n\n              case 5:\n                if (!(this.props.isLogin || createUserResponse.isSuccessful)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 8;\n                return connectUser(this.state.facebookResponse.name, null, Keys.facebookAuthType, this.state.facebookResponse.accessToken, this.state.facebookResponse.userID);\n\n              case 8:\n                connectUserResponse = _context.sent;\n                this.props.enqueueSnackbar(connectUserResponse.message, {\n                  variant: connectUserResponse.snackbarVariant\n                });\n\n                if (connectUserResponse.isSuccessful) {\n                  setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate);\n                  setNewCookie(Cookies.username, this.state.facebookResponse.name, connectUserResponse.data.expirationDate);\n                  this.props.history.push(Paths.dashboard);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleFacebookOnClick() {\n        return _handleFacebookOnClick.apply(this, arguments);\n      }\n\n      return handleFacebookOnClick;\n    }()\n  }, {\n    key: \"responseFacebook\",\n    value: function responseFacebook(response) {\n      if (response.userID) {\n        this.setState({\n          facebookResponse: response\n        }, this.handleFacebookOnClick);\n      }\n    }\n  }, {\n    key: \"handleGoogleOnClick\",\n    value: function () {\n      var _handleGoogleOnClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var createUserResponse, connectUserResponse;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.props.isLogin) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return createUser(this.state.googleResponse.profileObj.name, null, Keys.googleAuthType, this.state.googleResponse.accessToken, this.state.googleResponse.googleId);\n\n              case 3:\n                createUserResponse = _context2.sent;\n                this.props.enqueueSnackbar(createUserResponse.message, {\n                  variant: createUserResponse.snackbarVariant\n                });\n\n              case 5:\n                if (!(this.props.isLogin || createUserResponse.isSuccessful)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 8;\n                return connectUser(this.state.googleResponse.profileObj.name, null, Keys.googleAuthType, this.state.googleResponse.accessToken, this.state.googleResponse.googleId);\n\n              case 8:\n                connectUserResponse = _context2.sent;\n                this.props.enqueueSnackbar(connectUserResponse.message, {\n                  variant: connectUserResponse.snackbarVariant\n                });\n\n                if (connectUserResponse.isSuccessful) {\n                  setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate);\n                  setNewCookie(Cookies.username, this.state.googleResponse.profileObj.name, connectUserResponse.data.expirationDate);\n                  this.props.history.push(Paths.dashboard);\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handleGoogleOnClick() {\n        return _handleGoogleOnClick.apply(this, arguments);\n      }\n\n      return handleGoogleOnClick;\n    }()\n  }, {\n    key: \"responseGoogle\",\n    value: function responseGoogle(response) {\n      if (response.error) {\n        /* this.props.enqueueSnackbar(response.error, { variant: 'error' }) */\n        // Errors aren't user oriented\n      } else {\n        this.setState({\n          googleResponse: response\n        }, this.handleGoogleOnClick);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(AuthButton, {\n        prefix: this.props.prefix,\n        handleOnClick: this.props.emailOnClick,\n        provider: 'Email',\n        color: 'rgba (0, 0, 0, 0.87)',\n        bgColor: 'white',\n        border: 'black 1px solid',\n        src: EmailIcon,\n        alt: 'email icon',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(FacebookLogin, {\n        appId: \"2063862280361420\",\n        callback: this.responseFacebook,\n        render: function render(renderProps) {\n          return React.createElement(AuthButton, {\n            prefix: _this2.props.prefix,\n            provider: 'Facebook',\n            bgColor: '#3B5998',\n            src: FacebookIcon,\n            alt: 'facebook icon',\n            handleOnClick: renderProps.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(GoogleLogin, {\n        clientId: \"45488678106-6rs3kp173qp91mgthu3fq4igo35hcij2.apps.googleusercontent.com\",\n        onSuccess: this.responseGoogle,\n        onFailure: this.responseGoogle,\n        render: function render(renderProps) {\n          return React.createElement(AuthButton, {\n            prefix: _this2.props.prefix,\n            provider: 'Google',\n            bgColor: '#DD4B39',\n            src: GoogleIcon,\n            alt: 'google icon',\n            handleOnClick: renderProps.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), \",\", React.createElement(AuthButton, {\n        prefix: this.props.prefix,\n        provider: 'Twitter',\n        bgColor: '#55ACEE',\n        src: TwitterIcon,\n        alt: 'twitter con',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProvidersChoice;\n}(Component);\n\nProvidersChoice.propTypes = {\n  isLogin: PropTypes.bool.isRequired,\n  prefix: PropTypes.string.isRequired,\n  emailOnClick: PropTypes.func\n};\nvar WithRouterWithSnackbarProvidersChoice = withRouter(withSnackbar(ProvidersChoice));\nexport default WithRouterWithSnackbarProvidersChoice;","map":{"version":3,"sources":["/web/src/components/ProvidersChoice.js"],"names":["React","Component","FacebookLogin","GoogleLogin","withSnackbar","withRouter","AuthButton","PropTypes","connectUser","createUser","Keys","setNewCookie","Cookies","Paths","ProvidersChoice","props","state","facebookResponse","undefined","responseFacebook","bind","responseGoogle","isLogin","name","facebookAuthType","accessToken","userID","createUserResponse","enqueueSnackbar","message","variant","snackbarVariant","isSuccessful","connectUserResponse","userToken","data","token","expirationDate","username","history","push","dashboard","response","setState","handleFacebookOnClick","googleResponse","profileObj","googleAuthType","googleId","error","handleGoogleOnClick","prefix","emailOnClick","EmailIcon","renderProps","FacebookIcon","onClick","GoogleIcon","TwitterIcon","propTypes","bool","isRequired","string","func","WithRouterWithSnackbarProvidersChoice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nimport { GoogleLogin } from 'react-google-login'\nimport { withSnackbar } from 'notistack'\nimport { withRouter } from 'react-router-dom'\n\nimport AuthButton from './AuthButton'\n\nimport EmailIcon from '../res/drawable/email_icon.svg'\nimport FacebookIcon from '../res/drawable/facebook_icon.svg'\nimport GoogleIcon from '../res/drawable/google_icon.svg'\nimport TwitterIcon from '../res/drawable/twitter_icon.svg'\nimport PropTypes from 'prop-types'\nimport { connectUser, createUser } from '../services/Users/Requests'\nimport Keys from '../res/values/Keys'\nimport { setNewCookie } from '../helpers/cookies'\nimport Cookies from '../res/values/Cookies'\nimport Paths from '../res/values/Paths'\n\n// TODO : Dynamic styles and providers\n\nclass ProvidersChoice extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      facebookResponse: undefined\n    }\n    this.responseFacebook = this.responseFacebook.bind(this)\n    this.responseGoogle = this.responseGoogle.bind(this)\n  }\n\n  async handleFacebookOnClick () {\n    let createUserResponse\n\n    if (!this.props.isLogin) { // Sign up\n      createUserResponse = await createUser(\n        this.state.facebookResponse.name,\n        null,\n        Keys.facebookAuthType,\n        this.state.facebookResponse.accessToken,\n        this.state.facebookResponse.userID)\n\n      this.props.enqueueSnackbar(createUserResponse.message, { variant: createUserResponse.snackbarVariant })\n    }\n    if (this.props.isLogin || createUserResponse.isSuccessful) {\n      let connectUserResponse = await connectUser(\n        this.state.facebookResponse.name,\n        null,\n        Keys.facebookAuthType,\n        this.state.facebookResponse.accessToken,\n        this.state.facebookResponse.userID)\n\n      this.props.enqueueSnackbar(connectUserResponse.message, { variant: connectUserResponse.snackbarVariant })\n      if (connectUserResponse.isSuccessful) {\n        setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate)\n        setNewCookie(Cookies.username, this.state.facebookResponse.name, connectUserResponse.data.expirationDate)\n        this.props.history.push(Paths.dashboard)\n      }\n    }\n  }\n\n  responseFacebook (response) {\n    if (response.userID) {\n      this.setState({\n        facebookResponse: response\n      }, this.handleFacebookOnClick)\n    }\n  }\n\n  async handleGoogleOnClick () {\n    let createUserResponse\n\n    if (!this.props.isLogin) { // Sign up\n      createUserResponse = await createUser(\n        this.state.googleResponse.profileObj.name,\n        null,\n        Keys.googleAuthType,\n        this.state.googleResponse.accessToken,\n        this.state.googleResponse.googleId)\n\n      this.props.enqueueSnackbar(createUserResponse.message, { variant: createUserResponse.snackbarVariant })\n    }\n    if (this.props.isLogin || createUserResponse.isSuccessful) {\n      let connectUserResponse = await connectUser(\n        this.state.googleResponse.profileObj.name,\n        null,\n        Keys.googleAuthType,\n        this.state.googleResponse.accessToken,\n        this.state.googleResponse.googleId)\n\n      this.props.enqueueSnackbar(connectUserResponse.message, { variant: connectUserResponse.snackbarVariant })\n      if (connectUserResponse.isSuccessful) {\n        setNewCookie(Cookies.userToken, connectUserResponse.data.token, connectUserResponse.data.expirationDate)\n        setNewCookie(Cookies.username, this.state.googleResponse.profileObj.name, connectUserResponse.data.expirationDate)\n        this.props.history.push(Paths.dashboard)\n      }\n    }\n  }\n\n  responseGoogle (response) {\n    if (response.error) {\n      /* this.props.enqueueSnackbar(response.error, { variant: 'error' }) */ // Errors aren't user oriented\n    } else {\n      this.setState({\n        googleResponse: response\n      }, this.handleGoogleOnClick)\n    }\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <AuthButton\n          prefix={this.props.prefix}\n          handleOnClick={this.props.emailOnClick}\n          provider={'Email'}\n          color={'rgba (0, 0, 0, 0.87)'}\n          bgColor={'white'}\n          border={'black 1px solid'}\n          src={EmailIcon}\n          alt={'email icon'} />\n        <FacebookLogin\n          appId='2063862280361420'\n          callback={this.responseFacebook}\n          render={renderProps => (\n            <AuthButton\n              prefix={this.props.prefix}\n              provider={'Facebook'}\n              bgColor={'#3B5998'}\n              src={FacebookIcon}\n              alt={'facebook icon'}\n              handleOnClick={renderProps.onClick} />\n          )}\n        />\n        {/*<AuthButton\n        prefix={this.props.prefix}\n        provider={'Facebook'}\n        bgColor={'#3B5998'}\n        src={FacebookIcon}\n        alt={'facebook icon'} />*/}\n        <GoogleLogin\n          clientId='45488678106-6rs3kp173qp91mgthu3fq4igo35hcij2.apps.googleusercontent.com'\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          render={renderProps => (\n            <AuthButton\n              prefix={this.props.prefix}\n              provider={'Google'}\n              bgColor={'#DD4B39'}\n              src={GoogleIcon}\n              alt={'google icon'}\n              handleOnClick={renderProps.onClick} />\n          )}\n        />,\n        {/*<AuthButton\n          prefix={this.props.prefix}\n          provider={'Google'}\n          bgColor={'#DD4B39'}\n          src={GoogleIcon}\n          alt={'google icon'} />*/}\n        <AuthButton\n          prefix={this.props.prefix}\n          provider={'Twitter'}\n          bgColor={'#55ACEE'}\n          src={TwitterIcon}\n          alt={'twitter con'} />\n      </React.Fragment>\n    )\n  }\n}\n\nProvidersChoice.propTypes = {\n  isLogin: PropTypes.bool.isRequired,\n  prefix: PropTypes.string.isRequired,\n  emailOnClick: PropTypes.func\n}\n\nconst WithRouterWithSnackbarProvidersChoice = withRouter(withSnackbar(ProvidersChoice))\n\nexport default WithRouterWithSnackbarProvidersChoice\n"]},"metadata":{},"sourceType":"module"}